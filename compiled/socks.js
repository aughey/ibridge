function createSocksServer(e){var t=net.createServer();return t.on("listening",function(){var e=t.address()}),t.on("connection",function(t){initSocksConnection.bind(t)(e)}),t}function initSocksConnection(e){clients.push(this),this.on("end",function(){var e=clients.indexOf(this);e!=-1&&clients.splice(e,1)}),this.on("error",function(e){}),this.handshake=handshake.bind(this),this.on_accept=e,this.on("data",this.handshake)}function handshake(e){this.removeListener("data",this.handshake);var t=0;e[0]!=SOCKS_VERSION&&(errorLog("handshake: wrong socks version: %d",e[0]),this.end()),t=e[1],this.auth_methods=[];for(var n=2;n<t+2;n++)this.auth_methods.push(e[n]);log("Supported auth methods: %j",this.auth_methods);var r=new Buffer(2);r[0]=5,this.auth_methods.indexOf(AUTHENTICATION.NOAUTH)>-1?(log("Handing off to handleRequest"),this.handleRequest=handleRequest.bind(this),this.on("data",this.handleRequest),r[1]=AUTHENTICATION.NOAUTH,this.write(r)):(errorLog("Unsuported authentication method -- disconnecting"),r[1]=255,this.end(r))}function handleRequest(e){this.removeListener("data",this.handleRequest);var t=e[1],n,r,i=3;if(e[0]!==SOCKS_VERSION){this.end("%d%d",5,1),errorLog("handleRequest: wrong socks version: %d",e[0]);return}n=Address.read(e,3),i=3+Address.sizeOf(e,3)+2,r=e.readUInt16BE(i),log("Request: type: %d -- to: %s:%s",e[1],n,r);if(t!=REQUEST_CMD.CONNECT){this.end("%d%d",5,1);return}this.request=e,this.on_accept(this,r,n,proxyReady.bind(this))}function proxyReady(){log("Indicating to the client that the proxy is ready");var e=new Buffer(this.request.length);this.request.copy(e),e[0]=SOCKS_VERSION,e[1]=0,e[2]=0,this.write(e),log("Connected to: %s:%d",e.toString("utf8",4,e.length-2),e.readUInt16BE(e.length-2))}var net=require("net"),util=require("util"),log=function(e){},clients=[],SOCKS_VERSION=5,AUTHENTICATION={NOAUTH:0,GSSAPI:1,USERPASS:2,NONE:255},REQUEST_CMD={CONNECT:1,BIND:2,UDP_ASSOCIATE:3},ATYP={IP_V4:1,DNS:3,IP_V6:4},Address={read:function(e,t){if(e[t]==ATYP.IP_V4)return util.format("%s.%s.%s.%s",e[t+1],e[t+2],e[t+3],e[t+4]);if(e[t]==ATYP.DNS)return e.toString("utf8",t+2,t+2+e[t+1]);if(e[t]==ATYP.IP_V6)return e.slice(e[t+1],e[t+1+16])},sizeOf:function(e,t){if(e[t]==ATYP.IP_V4)return 4;if(e[t]==ATYP.DNS)return e[t+1];if(e[t]==ATYP.IP_V6)return 16}};module.exports={createServer:createSocksServer};